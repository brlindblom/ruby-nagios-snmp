/* This configuration will scan all SNMP-defined disks for used percentage
   and used inode percentage */
{
  // Textual identifier that will display in Nagios output
  "identifier": "Host disk usage",

  // List of OIDs to search with various attributes and filters
  "oids": {

    // The default OID is special.  Its attributes apply to all other OIDs unless overrode
    "default": {

      // The "id" is used as a textual identifier to identify a problem device.  In this case,
      // we are setting the "default" OID to an SNMP index_oid to derive the "id" from the 
      // value of another OID range
      "id": "index_oid:1.3.6.1.4.1.2021.9.1.2",

      // The value map is a table that evaluates the values of each of the checked OIDs, mapping
      // each evaluation to an appropriate return code and information string.  Any Ruby-based
      // conditional statement is valid
      "value_map": [
        [ "%value < 90", 0, null ],
        [ "%value >= 90", 1, null ],
        [ "%value >= 95", 2, null ]
      ],
      
      // Each OID will inherit a range.  In this case, we will derive the range from an index OID
      "range": "index_oid:1.3.6.1.4.1.2021.9.1.1",

      // There may be OIDs in the range defined that we want to exclude based on specific circumstances.
      // In this case, we are excluding filesystems that we don't want to check
      "exclude_index_map": [
        [ "%q{%value} =~ /(devtmpfs|sysfs|proc|devpts|sunrpc|none|[a-zA-Z0-9\.]+\:.*|loop\d+)/", "1.3.6.1.4.1.2021.9.1.3" ]
      ]
    },

    // These are individual OIDs for dskPercent and dskPercentNode to get disk usage and inode usage percentage
    "1.3.6.1.4.1.2021.9.1.9": { "desc": "Disk used percentage" },
    "1.3.6.1.4.1.2021.9.1.10": { "desc": "Disk inode used percentage" }
  }
}
